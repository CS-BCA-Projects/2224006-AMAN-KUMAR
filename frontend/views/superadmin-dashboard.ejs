<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Super Admin Portal</title>
    <link rel="stylesheet" href="/css/custom.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://kit.fontawesome.com/a96a0fdf1a.js" crossorigin="anonymous"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
        }

        .navbar {
            background-color: #0000ff;
        }

        .logo-img {
            border-radius: 50%;
        }

        .navbar-brand img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
        }

        .table th {
            background-color: #4a00ff;
            color: white;
            text-align: center;
        }

        .table td {
            text-align: center;
            vertical-align: middle;
        }

        .action-btn {
            padding: 5px 12px;
            font-size: 14px;
            cursor: pointer;
        }

        .btn-update {
            background-color: green;
            color: white;
            border: none;
        }

        .btn-delete {
            background-color: red;
            color: white;
            border: none;
        }

        .btn-view {
            background-color: #00bcd4;
            color: white;
            border: none;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.4);
        }

        .modal-content {
            background-color: white;
            padding: 20px;
            border: 1px solid #888;
            width: 370px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
            border-radius: 10px;
            position: absolute;

            top: 50%;
            left: 50%;
            transform: translate(-50%,-50%);
        }

        .close {
            color: red;
            float: right;
            font-size: 24px;
            font-weight: bold;
            cursor: pointer;
        }

        /* Style for user profile dropdown */
        .profile-dropdown {
            display: none;
            /* Hidden by default */
            position: absolute;
            top: 50px;
            /* Adjust distance below user icon */
            right: 10px;
            /* Align with the user icon */
            background-color: #d9d9d9;
            /* Light gray background */
            border-radius: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            padding: 10px;
            min-width: 180px;
            z-index: 1000;
            border: 2px solid #007bff;
            /* Blue border */
        }

        /* Style for username */
        .profile-dropdown p {
            font-size: 16px;
            font-weight: bold;
            text-align: center;
            margin: 0;
            padding: 10px;
        }

        /* Blue underline */
        .profile-dropdown hr {
            border: 1px solid blue;
            margin: 5px 0;
        }

        /* Logout button */
        .logout-btn {
            width: 100%;
            background: none;
            border: none;
            font-size: 16px;
            font-weight: bold;
            color: black;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 8px 0;
            cursor: pointer;
        }

        /* Logout icon */
        .logout-btn i {
            margin-left: 5px;
        }

        .welcome {
            border-bottom: 2px solid rgb(35, 1, 255);
            padding-bottom: 5px;
            width: fit-content;
            font-size: 16px;
        }

        .cust-table {
            width: 100%;
            margin-top: 30px;
            border-collapse: separate;
            /* Enables spacing */
            border-spacing: 0 20px;
            /* Adds 10px gap between rows */
        }

        thead {
            background-color: rgb(35, 1, 255);
            color: white;
            margin-bottom: 20px;
        }

        th {
            padding: 10px 10px;
            border-left: 1px solid white;
            text-align: center;
        }

        td {
            text-align: center;
        }

        /* Apply border-radius to first and last header cells */
        table thead tr th:first-child,
        #adminTableBody tr td:first-child {
            border-top-left-radius: 10px;
            border-bottom-left-radius: 10px;
        }

        table thead tr th:last-child,
        #adminTableBody tr td:last-child {
            border-top-right-radius: 10px;
            border-bottom-right-radius: 10px;
        }

        .corner {
            border-radius: 10px;
        }

        .right-corner {
            border-top-right-radius: 10px;
            border-bottom-right-radius: 10px;
        }

        .left-corner {
            border-top-left-radius: 10px;
            border-bottom-left-radius: 10px;
        }

        #adminTableBody tr td {
            border: 1px solid rgb(35, 1, 255);
            padding: 10px 20px;
        }

        .mobile-view {
            display: none;
        }
        .mobile-card {
            background-color: transparent;
            padding: 10px;
            border: 1px solid rgb(35, 1, 255);
            margin: 20px 0px;
            border-radius: 8px;
            box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.1);
        }
        .mobile-card h5 {
            margin-bottom: 5px;
        }
        .mobile-actions {
            display: flex;
            gap: 10px;
        }            

        @media (max-width : 991px) {
            #menu-bar-box {
                background-color: #0000ff;
            }

            .navbar-collapse {
                position: absolute;
                z-index: 100;
                top: 60px;
                left: 80%;
            }

            #menu-bar-box a {
                color: black;
                padding: 15px;
            }
        }
    </style>
</head>

<body>

    <nav class="navbar navbar-expand-lg navbar-dark px-3">
        <div class="d-flex align-items-center">
            <img src="/images/logo.jpg" alt="AWGP Logo" width="50" height="50" class="logo-img">
            <h4 class="ms-2 fs-6 fw-light text-white">AWGP Seva Portal</h4>
        </div>
      
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto" id="menu-bar-box">
                <li class="nav-item"><a class="nav-link text-white" href="/api/v1/superadmin/dashboard">Home</a></li>
                <li class="nav-item"><a class="nav-link text-white" href="/api/v1/help">Help</a></li>
            </ul>
        </div>
        <!-- ðŸ‘¤ User Profile Icon -->
        <div class="nav-item ms-auto">
            <a class="nav-link" href="#" id="showUserProfile">
                <i class="fas fa-user-circle"></i>
            </a>
        </div>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>
    </nav>

    <div id="userProfileDropdown" class="profile-dropdown">
        <p id="profileUserName"></p>
        <hr> <!-- Blue underline -->
        <button class="logout-btn" onclick="logout()">Log Out <i class="fas fa-sign-out-alt"></i></button>
        <hr> <!-- Blue underline -->
        <button class="logout-btn" onclick="window.location.href='/api/v1/changePassword'">Change
            Password</button>
    </div>

    <div class="m-4">
        <h3 class="welcome">Super Admin Dashboard</h3>
        <p>Manage admins efficiently by adding, updating, or deleting them.</p>

        <button class="btn btn-primary mb-3" onclick="showAddAdminForm()">+ Add Admin</button>
        <div class="table-responsive d-none d-md-block">
            <table class="cust-table ">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Phone</th>
                        <th>State</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="adminTableBody"></tbody>
            </table>
        </div>


        <!-- âœ… Mobile View Cards -->
        <div class="d-block d-md-none">
            <h5 class="text-center bg-primary text-white p-2 rounded mt-4" >Details</h5>
            <div id="adminMobileView">

            </div>
        </div>

    </div>

    <!-- Add Admin Modal -->
    <div id="addAdminModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h2>Add New Admin</h2>
            <input type="text" id="adminName" placeholder="Full Name" class="form-control mb-2">
            <input type="email" id="adminEmail" placeholder="Email" class="form-control mb-2">
            <input type="text" id="adminPhone" placeholder="Phone" class="form-control mb-2">
            <input type="text" id="adminAddress" placeholder="Address" class="form-control mb-2">
            <input type="text" id="adminPinCode" placeholder="Pin Code" class="form-control mb-2">
            <select id="adminState" class="form-control mb-2">
                <option value="">Select State/UT</option>
                <option value="Andhra Pradesh">Andhra Pradesh</option>
                <option value="Arunachal Pradesh">Arunachal Pradesh</option>
                <option value="Assam">Assam</option>
                <option value="Bihar">Bihar</option>
                <option value="Chhattisgarh">Chhattisgarh</option>
                <option value="Goa">Goa</option>
                <option value="Gujarat">Gujarat</option>
                <option value="Haryana">Haryana</option>
                <option value="Himachal Pradesh">Himachal Pradesh</option>
                <option value="Jharkhand">Jharkhand</option>
                <option value="Karnataka">Karnataka</option>
                <option value="Kerala">Kerala</option>
                <option value="Madhya Pradesh">Madhya Pradesh</option>
                <option value="Maharashtra">Maharashtra</option>
                <option value="Manipur">Manipur</option>
                <option value="Meghalaya">Meghalaya</option>
                <option value="Mizoram">Mizoram</option>
                <option value="Nagaland">Nagaland</option>
                <option value="Odisha">Odisha</option>
                <option value="Punjab">Punjab</option>
                <option value="Rajasthan">Rajasthan</option>
                <option value="Sikkim">Sikkim</option>
                <option value="Tamil Nadu">Tamil Nadu</option>
                <option value="Telangana">Telangana</option>
                <option value="Tripura">Tripura</option>
                <option value="Uttar Pradesh">Uttar Pradesh</option>
                <option value="Uttarakhand">Uttarakhand</option>
                <option value="West Bengal">West Bengal</option>
                <option value="Andaman and Nicobar Islands">Andaman and Nicobar Islands</option>
                <option value="Chandigarh">Chandigarh</option>
                <option value="Dadra and Nagar Haveli and Daman and Diu">Dadra and Nagar Haveli and Daman and Diu</option>
                <option value="Delhi">Delhi</option>
                <option value="Jammu and Kashmir">Jammu and Kashmir</option>
                <option value="Ladakh">Ladakh</option>
            </select>
            
            <button class="btn btn-success" onclick="addAdmin()">Add Admin</button>
        </div>
    </div>

    <div id="editAdminModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditModal()">&times;</span>
            <h2>Edit Admin</h2>
            <input type="hidden" id="editAdminId">
            <input type="text" id="editAdminName" placeholder="Full Name" class="form-control mb-2">
            <input type="email" id="editAdminEmail" placeholder="Email" class="form-control mb-2">
            <input type="text" id="editAdminPhone" placeholder="Phone" class="form-control mb-2">
            <input type="text" id="editAdminAddress" placeholder="Address" class="form-control mb-2">
            <input type="text" id="editAdminPinCode" placeholder="Pin Code" class="form-control mb-2">
            <select id="editAdminState" class="form-control mb-2">
                <option value="">Select State</option>
                <option value="Bihar">Bihar</option>
                <option value="Uttar Pradesh">Uttar Pradesh</option>
                <option value="Madhya Pradesh">Madhya Pradesh</option>
                <option value="Rajasthan">Rajasthan</option>
                <option value="Maharashtra">Maharashtra</option>
            </select>
            <button class="btn btn-success" onclick="saveAdminChanges()">Save Changes</button>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

    <script>
        document.addEventListener("DOMContentLoaded", fetchAdmins);

        function fetchAdmins() {
            fetch("/api/v1/superadmin/admins")
                .then(response => response.json())
                .then(data => {
                    const tableBody = document.getElementById("adminTableBody");
                    const adminMobileView = document.getElementById("adminMobileView");
                    tableBody.innerHTML = "";
                    adminMobileView.innerHTML = "";

                    data.forEach(admin => {
                        const row = document.createElement("tr");
                        row.innerHTML = `
                        <td>${admin.name}</td>
                        <td>${admin.email}</td>
                        <td>${admin.phone}</td>
                        <td>${admin.state}</td>
                        <td>
                            <button class="btn btn-update action-btn" onclick="updateAdmin('${admin._id}')">Update</button>
                            <button class="btn btn-delete action-btn" onclick="deleteAdmin('${admin._id}')">Delete</button>
                        </td>
                    `;
                        tableBody.appendChild(row);

                        const card = document.createElement("div");
                        card.classList.add("mobile-card");
                        card.innerHTML = `
                            <h5>${admin.name}</h5>
                            <p><strong>Email:</strong> ${admin.email}</p>
                            <p><strong>Phone:</strong> ${admin.phone}</p>
                            <p><strong>State:</strong> ${admin.state}</p>
                            <div class="mobile-actions">
                                <button class="btn btn-update" onclick="updateAdmin('${admin._id}')">Update</button>
                                <button class="btn btn-delete" onclick="deleteAdmin('${admin._id}')">Delete</button>
                            </div>
                        `;
                        adminMobileView.appendChild(card);
                    });
                })
                .catch(error => console.error("Error fetching admins:", error));
        }

        function showAddAdminForm() {
            document.getElementById("addAdminModal").style.display = "block";
        }

        function closeModal() {
            document.getElementById("addAdminModal").style.display = "none";
        }

        function addAdmin() {
            const name = document.getElementById("adminName").value;
            const email = document.getElementById("adminEmail").value;
            const phone = document.getElementById("adminPhone").value;
            const address = document.getElementById("adminAddress").value;
            const pinCode = document.getElementById("adminPinCode").value;
            const state = document.getElementById("adminState").value;

            fetch("/api/v1/superadmin/admins/add", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ name, email, phone, address, pinCode, state })
            })
                .then(response => response.json())
                .then(() => {
                    fetchAdmins();
                    closeModal();
                })
                .catch(error => console.error("Error adding admin:", error));
        }

        function updateAdmin(adminId) {
            fetch(`/api/v1/superadmin/admins/${adminId}`)
                .then(response => response.json())
                .then(admin => {
                    if (!admin) {
                        console.error("Admin data not found.");
                        return;
                    }

                    // âœ… Fill the modal with admin details
                    document.getElementById("editAdminId").value = admin._id;
                    document.getElementById("editAdminName").value = admin.name || "";
                    document.getElementById("editAdminEmail").value = admin.email || "";
                    document.getElementById("editAdminPhone").value = admin.phone || "";
                    document.getElementById("editAdminAddress").value = admin.address || "";
                    document.getElementById("editAdminPinCode").value = admin.pinCode || "";
                    document.getElementById("editAdminState").value = admin.state || "";

                    // âœ… Open the modal
                    document.getElementById("editAdminModal").style.display = "block";
                })
                .catch(error => console.error("Error fetching admin details:", error));
        }

        // âœ… Function to save updated admin details
        function saveAdminChanges() {
            const adminId = document.getElementById("editAdminId").value;
            const updatedAdmin = {
                name: document.getElementById("editAdminName").value,
                email: document.getElementById("editAdminEmail").value,
                phone: document.getElementById("editAdminPhone").value,
                address: document.getElementById("editAdminAddress").value,
                pinCode: document.getElementById("editAdminPinCode").value,
                state: document.getElementById("editAdminState").value,
            };

            fetch(`/api/v1/superadmin/admins/update/${adminId}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(updatedAdmin),
            })
                .then(response => response.json())
                .then(() => {
                    alert("Admin updated successfully!");
                    closeEditModal();
                    fetchAdmins(); // âœ… Refresh the admin list
                })
                .catch(error => console.error("Error updating admin:", error));
        }

        // âœ… Close Edit Modal
        function closeEditModal() {
            document.getElementById("editAdminModal").style.display = "none";
        }

        document.addEventListener("DOMContentLoaded", function () {
            const userProfileBtn = document.getElementById("showUserProfile");
            const userProfileDropdown = document.getElementById("userProfileDropdown");
            const profileUserName = document.getElementById("profileUserName");


            // Show or hide dropdown on click
            userProfileBtn.addEventListener("click", function (event) {
                userProfileDropdown.style.display =
                    userProfileDropdown.style.display === "block" ? "none" : "block";
                event.stopPropagation(); // Prevent closing immediately
                profileUserName.innerHTML = "KingStar";
            });

            // Hide dropdown when clicking outside
            document.addEventListener("click", function (event) {
                if (!userProfileBtn.contains(event.target) && !userProfileDropdown.contains(event.target)) {
                    userProfileDropdown.style.display = "none";
                }
            });
        });

        // Logout function
        function logout() {
            fetch("/api/v1/logout", { method: "POST" })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert("Logged out successfully!");
                        window.location.href = "/api/v1/login";
                    } else {
                        alert("Logout failed. Try again.");
                    }
                })
                .catch(error => console.error("Error:", error));
        }
        function changePassword() {

        }
    </script>

</body>

</html>