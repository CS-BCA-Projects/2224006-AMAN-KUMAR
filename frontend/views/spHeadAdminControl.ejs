<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>SPHead Management</title>
    <link rel="stylesheet" href="/css/custom.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <script src="https://kit.fontawesome.com/a96a0fdf1a.js" crossorigin="anonymous"></script>
    <script src="/JS/districtSelect.js"></script>


    <style>
        body {
            font-family: Arial, sans-serif;
        }

        .table th {
            background-color: #4a00ff;
            color: white;
            text-align: center;
        }

        .table td {
            text-align: center;
            vertical-align: middle;
        }

        /* Overlay Styles */
        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            justify-content: center;
            align-items: center;
        }

        .overlay-content {
            background: white;
            padding: 20px;
            border-radius: 10px;
            width: 40%;
            text-align: center;
            position: relative;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
        }

        .close-btn {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 20px;
            font-weight: bold;
            cursor: pointer;
            color: red;
        }

        .logo-img {
            border-radius: 50%;
        }

        .navbar-brand img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
        }

        .navbar {
            background-color: #0000ff;
        }

        /* Style for user profile dropdown */
        .profile-dropdown {
            display: none;
            /* Hidden by default */
            position: absolute;
            top: 50px;
            /* Adjust distance below user icon */
            right: 10px;
            /* Align with the user icon */
            background-color: #d9d9d9;
            /* Light gray background */
            border-radius: 15px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            padding: 10px;
            min-width: 180px;
            z-index: 1000;
            border: 2px solid #007bff;
            /* Blue border */
        }

        /* Style for username */
        .profile-dropdown p {
            font-size: 16px;
            font-weight: bold;
            text-align: center;
            margin: 0;
            padding: 10px;
        }

        /* Blue underline */
        .profile-dropdown hr {
            border: 1px solid blue;
            margin: 5px 0;
        }

        /* Logout button */
        .logout-btn {
            width: 100%;
            background: none;
            border: none;
            font-size: 16px;
            font-weight: bold;
            color: black;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 8px 0;
            cursor: pointer;
        }

        /* Logout icon */
        .logout-btn i {
            margin-left: 5px;
        }

        .cust-table {
            width: 100%;
            margin-top: 30px;
            border-collapse: separate;
            /* Enables spacing */
            border-spacing: 0 20px;
            /* Adds 10px gap between rows */
        }

        thead {
            background-color: rgb(35, 1, 255);
            color: white;
            margin-bottom: 20px;
        }

        th {
            padding: 10px 10px;
            border-left: 1px solid white;
            text-align: center;
        }

        td {
            text-align: center;
        }

        /* Apply border-radius to first and last header cells */
        table thead tr th:first-child,
        #spHeadTableBody tr td:first-child {
            border-top-left-radius: 10px;
            border-bottom-left-radius: 10px;
        }

        table thead tr th:last-child,
        #spHeadTableBody tr td:last-child {
            border-top-right-radius: 10px;
            border-bottom-right-radius: 10px;
        }

        .corner {
            border-radius: 10px;
        }

        .right-corner {
            border-top-right-radius: 10px;
            border-bottom-right-radius: 10px;
        }

        .left-corner {
            border-top-left-radius: 10px;
            border-bottom-left-radius: 10px;
        }

        #spHeadTableBody tr td {
            border: 1px solid rgb(35, 1, 255);
            padding: 10px 20px;
        }

        .welcome {
            border-bottom: 2px solid rgb(35, 1, 255);
            padding-bottom: 5px;
            width: fit-content;
            font-size: 15px;
        }

        /* Initially Hide Modal */
        .hidden {
            display: none;
        }

        /* Modal Box */
        .addspheadBox {
            background: white;
            padding: 20px;
            border-radius: 10px;
            width: 35%;
            height: 85%;
            text-align: center;
            position: relative;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
        }

        /* Modal Title */
        .addspheadBox h2 {
            margin-bottom: 15px;
            font-size: 22px;
            color: #333;
        }

        /* Form Styles */
        .addspheadBox form {
            display: flex;
            flex-direction: column;
        }

        /* Input Fields */
        .addspheadBox label {
            font-weight: bold;
            text-align: left;
            margin-top: 10px;
        }

        .addspheadBox input {
            width: 100%;
            padding: 8px;
            margin: 5px 0 15px;
            border: 1px solid #ccc;
            border-radius: 5px;
            font-size: 14px;
        }

        /* Buttons */
        .addspheadBox button {
            padding: 10px;
            margin-top: 10px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
        }
        @media (max-width : 991px) {
            #menu-bar-box {
                background-color: #0000ff;
            }
            .navbar-collapse{
                position: absolute;
                z-index: 100;
                top: 60px;
                left: 80%;
            }
            #menu-bar-box a {
                color: black;
                padding: 15px;
            }
        }
    </style>
</head>

<body>

    <nav class="navbar navbar-expand-lg navbar-dark px-3">
        <div class="d-flex align-items-center">
            <img src="/images/logo.jpg" alt="AWGP Logo" width="50" height="50" class="logo-img">
            <h4 class="ms-2 fs-6 fw-light text-white">AWGP Seva Portal</h4>
        </div>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNav">
            <ul class="navbar-nav ms-auto" id="menu-bar-box">
                <li class="nav-item"><a class="nav-link text-white" href="/api/v1/admin/dashboard">Home</a></li>
                <li class="nav-item"><a class="nav-link text-white" href="/api/v1/admin/sphead-control">SP Head</a></li>
                <li class="nav-item"><a class="nav-link text-white" href="/api/v1/admin/unassigned-requests">Requests</a></li>

                <!-- 👤 User Profile Icon -->
                <li class="nav-item">
                    <a class="nav-link" href="#" id="showUserProfile">
                        <i class="fas fa-user-circle"></i>
                    </a>
                </li>
            </ul>
        </div>
    </nav>
    <!-- 👤 User Profile Dropdown (Positioned below user icon) -->
    <div id="userProfileDropdown" class="profile-dropdown">
        <p id="profileUserName"></p>
        <hr> <!-- Blue underline -->
        <button class="logout-btn" onclick="logout()">Log Out <i class="fas fa-sign-out-alt"></i></button>
        <hr> <!-- Blue underline -->
        <button class="logout-btn" onclick="window.location.href='/api/v1/changePassword'">Change Password</button>
    </div>

    <div class="container mt-4">
        <h3 class="welcome fw-bold">Welcome!</h3>
        <p>Admin can manage SPHeads by adding, updating, or deleting them.</p>
        <div class="d-flex justify-content-between align-items-center mt-4">
            <h5 id="eventTitle" class="welcome">SpHead Management</h5>
            <button class="btn btn-primary mb-3" onclick="showAddSPHeadForm()">+ Add SPHead</button>
        </div>

        <table class="cust-table">
            <thead>
                <tr>
                    <th>SP Head</th>
                    <th>Pin Code</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="spHeadTableBody">
                <!-- JavaScript will populate this -->
            </tbody>

        </table>
    </div>

    <!-- SPHead Details Overlay -->
    <div id="spHeadOverlay" class="overlay">
        <div class="overlay-content">
            <span class="close-btn" onclick="closeOverlayForDetail();">&times;</span>
            <h2 id="spHeadName"></h2>
            <p><strong>Email:</strong> <span id="spHeadEmail"></span></p>
            <p><strong>Phone:</strong> <span id="spHeadPhone"></span></p>
            <p><strong>State:</strong> <span id="spHeadState"></span></p>
            <p><strong>District:</strong> <span id="spHeadDistrict"></span></p>
            <p><strong>Pin Code:</strong> <span id="spHeadPinCode"></span></p>
            <p><strong>Address:</strong> <span id="spHeadAddress"></span></p>
        </div>
    </div>

    <!-- Update SPHead Modal -->
    <div id="updateSPHeadModal" class="overlay">
        <div class="overlay-content">
            <span class="close-btn" onclick="closeUpdateModal()">&times;</span>
            <h2>Update SPHead</h2>
            <input type="hidden" id="updateSPHeadId">
            <input type="text" id="updateSPHeadName" placeholder="Full Name" class="form-control mb-2">
            <input type="email" id="updateSPHeadEmail" placeholder="Email" class="form-control mb-2">
            <input type="text" id="updateSPHeadPhone" placeholder="Phone" class="form-control mb-2">
            <input type="text" id="updateSPHeadAddress" placeholder="Address" class="form-control mb-2">
            <button class="btn btn-success" onclick="updateSPHead()">Save Changes</button>
        </div>
    </div>

    <div id="addSPHeadModal" class="overlay">
        <div class="addspheadBox">
            <h3 class="welcome">Add New SPHead</h3>
            <form id="addSPHeadForm">
                <input type="text" id="spheadName" placeholder="Name" required />

                <input type="email" id="spheadEmail" placeholder="Email" required />

                <input type="text" id="spheadPhone" placeholder="Phone" required />

                <input type="text" id="spheadAddress" placeholder="Address" required />

                <input type="text" id="spheadPinCode" placeholder="PinCode" required />
                <!-- State & District Row -->
                <div class="mb-3 row">
                    <div class="col-md-6">
                        <input type="text" id="spheadState" class="form-control" readonly />
                    </div>

                    <div class="col-md-6">
                        <select id="spheadDistrict" class="form-control" aria-placeholder="District" required>
                            <option value="">Select District</option>
                        </select>
                    </div>
                </div>

                <div class="d-flex flex-row justify-content-center">
                    <button type="submit" id="submitNewSPHeadDetail" class="btn btn-primary btn-sm">Add SPHead</button>
                    <button type="button" onclick="closeOverlay()" class="btn btn-danger btn-sm ms-4">Cancel</button>
                </div>
            </form>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const spHeads = JSON.parse('<%- JSON.stringify(spHeads) %>'); // Get data from EJS
            const tableBody = document.getElementById("spHeadTableBody");

            function renderSPHeads() {
                tableBody.innerHTML = ""; // Clear previous data
                spHeads.forEach(spHead => {
                    const row = document.createElement("tr");

                    row.innerHTML = `
                    <td>${spHead.name}</td>
                    <td>${spHead.pinCode ? spHead.pinCode : "No Pin Code Found"}</td>
                    <td>
                        <div class = "d-flex flex-row justify-content-around align-items-center p-2">
                            <button class="btn btn-success btn-sm" onclick="showUpdateSPHeadForm('${spHead._id}', '${spHead.name}', '${spHead.email}', '${spHead.phone}', '${spHead.state}', '${spHead.district}', '${spHead.pinCode}', '${spHead.address}')">Update</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteSPHead('${spHead._id}')">Delete</button>
                            <button class="btn btn-info btn-sm" onclick="viewSPHeadDetails('${spHead._id}', '${spHead.name}', '${spHead.email}', '${spHead.phone}', '${spHead.state}', '${spHead.district}', '${spHead.pinCode}', '${spHead.address}')">View Details</button>
                        </div>
                    </td>
                `;

                    tableBody.appendChild(row);
                });
            }

            renderSPHeads(); // Call function to load table on page load
        });

        document.addEventListener("DOMContentLoaded", function () {
            const userProfileBtn = document.getElementById("showUserProfile");
            const userProfileDropdown = document.getElementById("userProfileDropdown");
            const profileUserName = document.getElementById("profileUserName");

            const user = JSON.parse('<%- JSON.stringify(user) %>');

            // Show or hide dropdown on click
            userProfileBtn.addEventListener("click", function (event) {
                userProfileDropdown.style.display =
                    userProfileDropdown.style.display === "block" ? "none" : "block";
                event.stopPropagation(); // Prevent closing immediately
                profileUserName.innerHTML = user.name;
            });

            // Hide dropdown when clicking outside
            document.addEventListener("click", function (event) {
                if (!userProfileBtn.contains(event.target) && !userProfileDropdown.contains(event.target)) {
                    userProfileDropdown.style.display = "none";
                }
            });
        });

        function logout() {
            fetch("/api/v1/logout", { method: "POST" })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert("Logged out successfully!");
                        window.location.href = "/api/v1/login";
                    } else {
                        alert("Logout failed. Try again.");
                    }
                })
                .catch(error => console.error("Error:", error));
        }

        function viewSPHeadDetails(id, name, email, phone, state, district, pinCode, address) {
            document.getElementById("spHeadName").innerText = name;
            document.getElementById("spHeadEmail").innerText = email;
            document.getElementById("spHeadPhone").innerText = phone;
            document.getElementById("spHeadState").innerText = state;
            document.getElementById("spHeadDistrict").innerText = district;
            document.getElementById("spHeadPinCode").innerText = pinCode;
            document.getElementById("spHeadAddress").innerText = address;

            document.getElementById("spHeadOverlay").style.display = "flex";
        }

        function closeOverlayForDetail() {
            document.getElementById("spHeadOverlay").style.display = "none";
        }

        function showUpdateSPHeadForm(id, name, email, phone, state, district, pinCode, address) {
            document.getElementById("updateSPHeadId").value = id;
            document.getElementById("updateSPHeadName").value = name;
            document.getElementById("updateSPHeadEmail").value = email;
            document.getElementById("updateSPHeadPhone").value = phone;
            document.getElementById("updateSPHeadAddress").value = address;

            document.getElementById("updateSPHeadModal").style.display = "flex";
        }

        function closeUpdateModal() {
            document.getElementById("updateSPHeadModal").style.display = "none";
        }

        function updateSPHead() {
            const spHeadId = document.getElementById("updateSPHeadId").value;
            const name = document.getElementById("updateSPHeadName").value;
            const email = document.getElementById("updateSPHeadEmail").value;
            const phone = document.getElementById("updateSPHeadPhone").value;
            const address = document.getElementById("updateSPHeadAddress").value;

            fetch(`/api/v1/admin/spheads/update/${spHeadId}`, {
                method: "PUT",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ name, email, phone, address })
            })
                .then(response => response.json())
                .then(data => {
                    if (data.message) {
                        alert(data.message); // ✅ Show success message
                    } else {
                        alert("Error updating SPHead");
                    }
                    location.reload();
                })
                .catch(error => {
                    console.error("Error updating SPHead:", error);
                    alert("Failed to update SPHead. Please try again.");
                });
        }


        function setAdminState(adminState) {
            const stateInput = document.getElementById("spheadState");
            const districtSelect = document.getElementById("spheadDistrict");

            // Set the state field and disable it
            stateInput.value = adminState;
            stateInput.setAttribute("readonly", true);  // Prevents user from changing it

            // Populate the district dropdown
            districtSelect.innerHTML = '<option value="">Select District</option>';
            if (window.districtData[adminState]) {
                window.districtData[adminState].forEach(district => {
                    let option = document.createElement("option");
                    option.value = district;
                    option.textContent = district;
                    districtSelect.appendChild(option);
                });
            }
        }


        function showAddSPHeadForm() {
            document.getElementById("addSPHeadModal").style.display = "flex";
            const user = JSON.parse('<%- JSON.stringify(user) %>');
            const adminState = user.state;

            setAdminState(adminState);

            // Fix: Pass the function reference, not the immediate call
            document.getElementById("addSPHeadForm").addEventListener("submit", submitSPHeadForm);
        }


        function closeOverlay() {
            document.getElementById("addSPHeadModal").style.display = "none";
        }

        function submitSPHeadForm(event) {
            event.preventDefault();

            const spHeadData = {
                name: document.getElementById("spheadName").value,
                email: document.getElementById("spheadEmail").value,
                phone: document.getElementById("spheadPhone").value,
                state: document.getElementById("spheadState").value,
                district: document.getElementById("spheadDistrict").value,
                address: document.getElementById("spheadAddress").value,
                pinCode: document.getElementById("spheadPinCode").value,
            };

            fetch("/api/v1/admin/spheads/add", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify(spHeadData),
            })
                .then(async response => {
                    const data = await response.json();

                    if (!response.ok) {
                        throw new Error(data.message || "Failed to add SPHead");
                    }

                    alert("✅ SPHead added successfully!");
                    closeOverlay();
                    location.reload(); // Reload to reflect changes
                })
                .catch(error => {
                    alert("❌ Error: " + error.message);
                    console.error("Error adding SPHead:", error);
                });
        }
        function deleteSPHead(spHeadId) {
            if (!confirm("Are you sure you want to delete this SPHead?")) {
                return; // Stop if the user cancels the confirmation
            }

            fetch(`/api/v1/admin/spheads/delete/${spHeadId}`, {
                method: "DELETE",
                headers: { "Content-Type": "application/json" }
            })
                .then(response => response.json())
                .then(data => {
                    alert(data.message); // ✅ Show success or error message from the backend
                    location.reload(); // ✅ Reload the page to reflect changes
                })
                .catch(error => {
                    console.error("Error deleting SPHead:", error);
                    alert("Failed to delete SPHead. Please try again.");
                });
        }


    </script>

</body>

</html>